apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: @ProjectIdGoesHere@-is-@VersionTagGoesHere@
    namespace: @NamespaceGoesHere@
    labels:
      app: @ProjectIdGoesHere@-@VersionTagGoesHere@
      region: primary
    spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: @DockerImageRepoGoesHere@/@ProjectIdGoesHere@:@VersionTagGoesHere@
      importPolicy:
        scheduled: true
      name: master
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: @ProjectIdGoesHere@-@VersionTagGoesHere@
      run: @ProjectIdGoesHere@-@VersionTagGoesHere@
    name: @ProjectIdGoesHere@-@VersionTagGoesHere@
    namespace: @NamespaceGoesHere@
  spec:
    replicas: 1
    selector:
      run: @ProjectIdGoesHere@-@VersionTagGoesHere@
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 120
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          run: @ProjectIdGoesHere@-@VersionTagGoesHere@
          partof: @ProjectIdGoesHere@-@VersionTagGoesHere@
      spec:
        containers:
        - image: @DockerImageRepoGoesHere@/@ProjectIdGoesHere@:@VersionTagGoesHere@
          imagePullPolicy: Always
          name: @ProjectIdGoesHere@-pod-@VersionTagGoesHere@
          resources: {}
          terminationMessagePath: /dev/termination-log
          ports:
            -
              name: http-port-app
              containerPort: 8080
          resources:
            limits:
              cpu: 1500m
              memory: 512Mi
            requests:
              cpu: 400m
              memory: 512Mi
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 4
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /lc/ping
              port: 8080
            initialDelaySeconds: 6
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
          lifecycle:
            preStop:
              httpGet:
                path: "/lc/stop/FE"
                port: 8080
- apiVersion: v1
  kind: Service
  metadata:
    name: @ProjectIdGoesHere@-svc-@VersionTagGoesHere@
    namespace: @NamespaceGoesHere@
    labels:
      app: @ProjectIdGoesHere@-@VersionTagGoesHere@
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"demo-be-svc-master","namespace":"@NamespaceGoesHere@","kind":"Service"}]'
  spec:
    ports:
      - port: 8080
        targetPort: 8080
    selector:
       run: @ProjectIdGoesHere@-@VersionTagGoesHere@
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
    name: @ProjectIdGoesHere@-route-@VersionTagGoesHere@
    namespace: @NamespaceGoesHere@
    labels:
      app: @ProjectIdGoesHere@-@VersionTagGoesHere@
  spec:
    host: demo-@VersionTagGoesHere@.@ClusterBaseNameGoesHere@
    port:
      targetPort: 8080
    to:
      kind: Service
      name: @ProjectIdGoesHere@-svc-@VersionTagGoesHere@
      weight: 100
kind: List
metadata: {}


